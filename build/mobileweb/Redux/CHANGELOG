v8.3 07/26/2011
    Fixed issue 21 - as of Titanium Mobile 1.7.x, the pathing approach introduced in Redux v8 is no longer necessary.
        It will still be used on older versions of Titanium Mobile.
    Merged pull request from mattheworiordan to fix erroneous call in inc and include (I was using call instead of apply).
    Fixed issue 23 - $.setDefault and $.addEventBinder should be called as $.fn.setDefault and $.fn.addEventBinder.

v8.2 04/28/2011
    Added "applyStyle" context sensitive function to allow for dynamic style changes;
        ex. $(view).applyStyle('View', { className: 'NewClassName' }); see README for more info
    "inc" and "include" shorthands now accept a variable number of arguments, like Ti.include does.
    Fixed variable name "i2" resulting in JSLint warning about duplicate variable declarations.
    Updated the CHANGELOG, wrapping several of the longer lines.
    Removed README in favor of README.md; duplicated content.

v8.1 04/27/2011
    BREAKING CHANGE - removed element tracking due to unnecessary object retention (memory leaks) --
        This means $('Label') will no longer select all labels.
        If this feature has interest in the community, we can look into fixing this rather than simply removing it.

v8 02/01/2011
    Redux on Titanium Mobile 1.6.0, both iOS and Android now fully working
    BREAKING CHANGE - rjss attributes no longer get Ti. injected!
        This means you can do things like || and && in attributes, or use non-Ti functions and variables;
        see README for more info
    Added redux.fn.style - style objects not created through redux, letting you use RJSS on anything;
        see README for more info
    Added redux.fn.addNaturalConstructor - extend redux with your own classes, supporting RJSS styling on them;
        useful for modules! see README for more info
    Added redux.fn.include - consistent cross platform!
        ex inc('includes/utilities.js') will work from ANY folder on both iOS and Android; see README for more info
    Added currentWindow and currentTab functions, for accessing Ti.UI.currentWindow and currentTab;
        see README for more info
    Added several new shorthands: inc for include, win for currentWindow, and tab for currentTab;
        see README for more info
    Fixed issue 11 - includeGlobal uses the new include function that works from any folder, to any folder.
    Fixed issue 12 - Redux shorthands will now politely step aside for existing functions instead of crashing the app
    Fixed issue 13 - RJSS now properly handles arrays, like buttonNames:['yes','no']
    Global file includes are now processed before RJSS includes, so you can use your utility functions in your RJSS
    Wrapped in closure to avoid polluting the global namespace
    Cleaned up included JSON2 library functions so they take up less space
    Fixed JSLint reported issues in library so the console will be quieter

v7 12/02/2010
	Added support for the latest 1.5 Titanium Mobile master branch
	Renamed JSS to RJSS to avoid conflicts with Titanium's JSS in 1.5
	Added support for attribute blocks (ex [Platform.lang='en']{ #foo{} #bar{} })
	RJSS parsing is now done in a single pass, greatly improving its performance

v6.1
	Actually implemented issue 5 -- specify multiple class names on your objects like you can in HTML
	    ex className: 'big_text red_text'

v6 11/20/2010
	Simplified the "setDefault" functions to be a single function call that takes in a selector
	Implemented issue 5 -- JSS now supports comma delimited selectors (ex "#Label1,#Label2,.Label3 { text: 'Hi!' }")
	Fixed issue 7 -- includeJSSGlobal broken by subdirectories
	Implemented issue 8 -- Create test / demo project
	Included json.org's JSON2 functions as redux.JSON to contend with Titanium's misimplementation on Android
	Tweaked global storage to use json.org's JSON2 functions instead of Titanium's

v5 11/18/2010
	Added two new include functions: includeJSSGlobal and includeGlobal
	JSS now caches cross context, so the parsing performance hit is reduced
	Cleaned up the namespacing a bit more; all core functionality is in the redux namespace with shorthands for
	    commonly used functions like includeJSS
	Tweaked spacing in code for cleaner look
	Updated JSDoc for several of the functions

v4.1
	Removed extra spacing added to class names and IDs

v4  11/16/2010
	Fixed issue 4 -- Slow JSS parsing
	Altered attributes to now come before their selectors, instead of after (see the README for more information)

v3  11/11/2010
	Fixed issue 1 -- Nested objects in JSS are now supported in all cases
	Fixed issue 2 -- Class names are now supported in JSS
	Cleaned up the redux namespace
	Expanded natural constructor to support anything created by Ti.*.create*, like Ti.Network.createHTTPClient
	JSS can now set defaults for non UI elements, like HTTPClients (if the objects are constructed through redux)
	Element selection by type, class, and ID now works like jQuery -- $('.myButton') will return an array of objects
	    matching the selector
	JSS now supports comments taking the form /* a comment */
	Updated the README with the new goodies and updated old ones
	
v2	11/09/2010
	JSS support! -- include easy localization
	Added a wrapper context $ function so we can support prototyping
	Event binding like "$(new Label()).click(function() { });"
	Added support for setting defaults by the ID of the element
	Removed enhanced include function; Appcelerator's already supported multiple files at once
	Added redux.min.js
	Updated the README with all the new goodies and the old ones

v1	11/08/2010
	Added shorthand to commonly used functions like "info('Hello, World!');"
	Easy UI constructors like "new Label()"
	Default values for UI elements made through Redux like "Label.setDefault({text:'Awesome'});"
	Enhanced include function supporting multiple files